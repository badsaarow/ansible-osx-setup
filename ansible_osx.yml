---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: "/opt/homebrew/bin"
      become: true
      become_user: root

    - name: "add custom homebrew repos"
      community.general.homebrew_tap:
        name:
          [
            adoptopenjdk/openjdk,
            fishtown-analytics/dbt,
            heroku/brew,
            homebrew/cask-versions,
            thoughtbot/formulae,
            weaveworks/tap,
          ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - android-sdk
        - android-studio
        - datagrip
        - docker
        - figma
        - google-chrome
        - microsoft-edge
        - microsoft-remote-desktop
        - obsidian
        - iterm2
        - slack
        - sublime-text
        - telegram-desktop
        - visual-studio-code
        - vlc
        - zoom

    - name: "Install homebrew packages"
      community.general.homebrew:
        name:
          [
            "autoconf",
            "automake",
            "awscli",
            "bfg",
            "coreutils",
            "curl",
            "wget",
            "direnv",
            "dnsmasq",
            "asdf",
            "fzf",
            "gnu-time",
            "gpg",
            "heroku",
            "htop",
            "gtop",
            "fd",
            "kubectx",
            "kubernetes-cli",
            "kubernetes-helm",
            "libtool",
            "libxslt",
            "libyaml",
            "mas",
            "openssl",
            "pkg-config",
            "postgresql",
            "rcm",
            "readline",
            "redis",
            "sqlite3",
            "tmux",
            "unixodbc",
            "unzip",
            "vim",
            "watchman",
            "xz",
            "yarn",
            "zlib",
            "zsh",
            "tig",
            "adr-tools",
            "gtk-vnc"
          ]
        state: present
        update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: "Create a default ZSH configuration"
      template:
        src: templates/.zshrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - ruby
        - elixir
        - nodejs
        - python
        - erlang

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.10.0
        asdf global python 3.10.0
        pip3 install ansible
        asdf reshim python

    - name: "Install Default Ruby"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install ruby 3.0.2
        asdf global ruby 3.0.2
        gem install bundler
        gem install cocoapods
        gem install rubocop
        gem install solargraph

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs 16.4.2
        asdf global nodejs 16.4.2

    - name: Install yarn packages
      shell: yarn global add {{ item }}
      with_items:
        - generator-generator
        - yo

    - name: Set git global config
      shell: |
        git config --global user.name sungyong
        git config --global user.email sungyong@gmail.com
